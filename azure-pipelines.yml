# specific branch build
trigger:
  branches:
    include:
    - master
    - releases/*
    exclude:
    - releases/old*

# variables: 
#   Service connection as configured in project settings
#   prodConnection: 'levsProd'
#   prodApp: 'levsProd'

stages:
- stage: build
  displayName: 'Build'
  jobs:
  - job: build_test
    displayName: 'Build and test'
    pool:
      vmImage: 'Ubuntu-20.04'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'
    - script: |
        echo "MONGODB_URI=$(connURI)" > .env
        echo "MONGODB_DB=$(dbName)" >> .env
      displayName: 'map secrets to .env file'
    - script: |
        npm install
      displayName: 'Install all dependencies'
    - script: |
        npm run lint
      displayName: 'Linting source code'
    - script: |
        npm run test
      displayName: 'Run all tests'
    - script: |
        npm run build
      displayName: 'Run production build'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
      displayName: 'Archive all files from build'
    - task: PublishPipelineArtifact@0
      inputs:
        targetPath: '$(System.ArtifactsDirectory)'
      displayName: 'Publish artifacts: drop'

# - stage: prod
#   displayName: 'Prod'
#   dependsOn: build
#   jobs:
#   - deployment: deployProd
#     displayName: 'Deploy prod'
#     environment: levsProdEnv
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: DownloadPipelineArtifact@1
#             inputs:
#               downloadPath: '$(System.DefaultWorkingDirectory)'
#           - task: AzureWebApp@1
#             inputs:
#               azureSubscription: $(prodConnection)
#               appType: 'webAppLinux'
#               appName: $(prodApp)
#               runtimeStack: 'NODE|14.7'
#               startUpCommand: 'npm run start'